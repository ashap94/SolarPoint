{"version":3,"sources":["webpack/bootstrap","./js/sceneSubjects/Earth.js","./js/sceneSubjects/GeneralLights.js","./js/sceneSubjects/StarField.js","./js/sceneSubjects/Sun.js","./js/sceneSubjects/Mercury.js","./js/sceneSubjects/Venus.js","./js/sceneSubjects/Mars.js","./js/sceneSubjects/Jupiter.js","./js/sceneSubjects/Saturn.js","./js/sceneSubjects/Uranus.js","./js/sceneSubjects/Neptune.js","./js/sceneSubjects/Pluto.js","./js/SceneManager.js","./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","scene","earth","THREE","Mesh","SphereGeometry","MeshPhongMaterial","material","map","ImageUtils","loadTexture","bumpMap","bumpScale","position","set","rotation","x","Math","PI","LineBasicMaterial","color","geometry","CircleGeometry","vertices","shift","line","Line","moon","materialMoon","geometryMoon","add","this","update","time","sin","cos","y","children","z","light","PointLight","AmbientLight","MeshBasicMaterial","side","BackSide","mesh","MeshStandardMaterial","flatShading","mercury","venus","mars","jupiter","saturn","rings","RingGeometry","DoubleSide","uranus","neptune","pluto","canvas","clock","Clock","screenDimensions","width","height","Scene","renderer","WebGLRenderer","antialias","alpha","DPR","window","devicePixelRatio","setPixelRatio","setSize","gammaInput","gammaOutput","buildRender","camera","aspectRatio","PerspectiveCamera","buildCamera","sceneSubjects","createSceneSubjects","controls","OrbitControls","domElement","minDistance","maxDistance","elapsedTime","getElapsedTime","length","render","onWindowResize","aspect","updateProjectionMatrix","document","getElementById","sceneManager","resizeCanvas","style","offsetWidth","offsetHeight","onresize","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// import * as THREE from 'three';\n// import Moon from \"./Moon\";\nfunction Earth(scene) {\n\n    var earth = new THREE.Mesh(\n        new THREE.SphereGeometry(3.5, 30, 30), \n        new THREE.MeshPhongMaterial());\n\n    // earth.material.color.set('rgb(30,230,55)');\n    earth.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/earthmap1k.jpg');\n    earth.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/earthbump1k.jpg');\n    earth.material.bumpScale = 0.05;\n    // earth.material.specularMap = THREE.ImageUtils.loadTexture('images/earthspec1k.jpg');\n    // earth.material.specular = new THREE.Color('grey');\n    \n    var orbitRadius = 45;\n    var orbitRadiusMoon = 5.8;\n\n    earth.position.set(orbitRadius, 0, 0);\n    // earth.rotation.y = (Math.PI / 2);\n    earth.rotation.x = Math.PI / 2;\n\n\n    var material = new THREE.LineBasicMaterial({color: 'aqua'});\n    var geometry = new THREE.CircleGeometry( orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0,0,0);\n\n\n    // MOON Construction \n\n    var moon = new THREE.Mesh(\n        new THREE.SphereGeometry(1.4, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    moon.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/moonmap1k.jpg');\n    moon.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/moonbump1k.jpg');\n    moon.material.bumpScale = 0.05;\n\n    moon.position.set(orbitRadiusMoon, 0, 0);\n\n    var materialMoon = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometryMoon = new THREE.CircleGeometry(orbitRadiusMoon, 1000);\n    geometryMoon.vertices.shift();\n    var lineMoon = new THREE.Line(geometryMoon, materialMoon);\n    lineMoon.position.set(0, 0, 0);\n\n    // moon.rotation.y = (Math.PI / 2);\n    // moon.rotation.x = -(Math.PI / 2);\n\n    // lineMoon.rotation.y = (Math.PI / 2);\n    // lineMoon.rotation.x = -(Math.PI / 2);\n\n\n    // var orbit = new THREE.Group();\n    // orbit.add(line);\n    // orbit.add(earth);\n\n    // var moon = new Moon(scene);\n\n    moon.rotation.x = -(Math.PI / 2);\n\n    earth.add( moon );\n    // earth.add( lineMoon);\n\n    scene.add(earth);\n    scene.add(line);\n\n    // console.log(earth);\n\n    // scene.add(mesh);\n\n    this.update = function (time) {\n        const scale = Math.sin(time);\n\n        // earth.position.set(Math.cos(time) * orbitRadius, Math.sin(time) * orbitRadius );\n        earth.position.x = Math.cos(time * 0.15) * orbitRadius ;\n        earth.position.y = Math.sin(time * 0.15) * orbitRadius ;\n        earth.rotation.y = time * 0.45;\n\n        earth.children[0].position.z = Math.cos(time * 0.35) * orbitRadiusMoon;\n        earth.children[0].position.y = Math.sin(time * 0.35) * orbitRadiusMoon;\n        earth.children[0].rotation.y = time * 0.45;\n\n        // earth.children[1].rotation.y = -(time * 0.45);\n        \n    }\n\n}\n\nexport default Earth;","// import * as THREE from 'three';\nfunction GeneralLights(scene) {\n\n    var light = new THREE.PointLight(0xffffff, 5, 1000);\n    light.position.set(0,0,0);\n    scene.add(light);\n\n    // var light = new THREE.PointLight(0xffffff, 1, 1000);\n    // light.position.set(0, 0, -25);\n    // scene.add(light);\n\n    var light = new THREE.AmbientLight(0xffffff, 1);\n    scene.add( light );\n\n    this.update = function (time) {\n        // light.intensity = (Math.sin(time) + 1.5) / 1.5;\n        // light.color.setHSL(Math.sin(time), 0.5, 0.5);\n    }\n}\n\nexport default GeneralLights;","// import * as THREE from 'three';\nfunction StarField (scene) {\n\n    var geometry = new THREE.SphereGeometry(1000, 1000, 1000);\n    var material = new THREE.MeshBasicMaterial();\n\n    material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/galaxy_starfield.jpg');\n    // material.map = new THREE.SphereTextureLoader().setpath(\"js/libslibs/threex.planets-master/images/\")\n    //     .load('galaxy_starfield.jpg');\n\n    material.side = THREE.BackSide;\n    var mesh = new THREE.Mesh(geometry, material)\n\n    scene.add(mesh);\n\n    this.update = function (time) {\n\n    }\n\n}\n\nexport default StarField;","// import * as THREE from 'three';\nfunction Sun(scene) {\n  var radius = 7;\n  var mesh = new THREE.Mesh(\n    new THREE.SphereGeometry(radius, 30, 30),\n    new THREE.MeshStandardMaterial({ flatShading: false })\n  );\n  // mesh.material.color.set(\"#FDB813\");\n  mesh.material.map = THREE.ImageUtils.loadTexture(\n    \"js/libs/threex.planets-master/images/sunmapUpdate-min.jpg\"\n  );\n  mesh.position.set(0, 0, 0);\n\n  scene.add(mesh);\n\n  this.update = function(time) {\n    const scale = Math.sin(time);\n\n    // mesh.scale.set(scale, scale, scale);\n    // mesh.position.set(scale)\n  };\n}\n\nexport default Sun;\n","function Mercury(scene) {\n\n    var mercury = new THREE.Mesh(\n        new THREE.SphereGeometry(1.5, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    mercury.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/mercurymap.jpg');\n    mercury.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/mercurybump.jpg');\n    mercury.material.bumpScale = 0.05;\n\n    var orbitRadius = 15;\n\n    mercury.position.set(orbitRadius, 0, 0);\n    mercury.rotation.x = Math.PI / 2;\n\n    var material = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometry = new THREE.CircleGeometry(orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0, 0, 0);\n    // console.log(mercury);\n\n    scene.add(mercury);\n    scene.add(line);\n\n    this.update = function (time) {\n        mercury.position.x = Math.cos(time * 0.6) * orbitRadius;\n        mercury.position.y = Math.sin(time * 0.6) * orbitRadius;\n        mercury.rotation.y = time * 0.45;\n    }\n\n}\n\nexport default Mercury;","function Venus(scene) {\n\n    var venus = new THREE.Mesh(\n        new THREE.SphereGeometry(3.2, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    venus.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/venusmap.jpg');\n    venus.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/venusbump.jpg');\n    venus.material.bumpScale = 0.05;\n\n    var orbitRadius = 25;\n\n    venus.position.set(orbitRadius, 0, 0);\n    venus.rotation.x = Math.PI / 2;\n\n    var material = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometry = new THREE.CircleGeometry(orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0, 0, 0);\n    // console.log(venus);\n\n    scene.add(venus);\n    scene.add(line);\n\n    this.update = function (time) {\n        venus.position.x = Math.cos(time * 0.25) * orbitRadius;\n        venus.position.y = Math.sin(time * 0.25) * orbitRadius;\n        venus.rotation.y = time * 0.45;\n    }\n\n}\n\nexport default Venus;","function Mars(scene) {\n\n    var mars = new THREE.Mesh(\n        new THREE.SphereGeometry(2, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    mars.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/marsmap1k.jpg');\n    mars.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/marsbump1k.jpg');\n    mars.material.bumpScale = 0.05;\n\n    var orbitRadius = 55;\n\n    mars.position.set(orbitRadius, 0, 0);\n    mars.rotation.x = Math.PI / 2;\n\n    var material = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometry = new THREE.CircleGeometry(orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0, 0, 0);\n    // console.log(mars);\n\n    scene.add(mars);\n    scene.add(line);\n\n    this.update = function (time) {\n        mars.position.x = Math.cos(time * 0.09) * orbitRadius;\n        mars.position.y = Math.sin(time * 0.09) * orbitRadius;\n        mars.rotation.y = time * 0.45;\n    }\n\n}\n\nexport default Mars;","function Jupiter(scene) {\n\n    var jupiter = new THREE.Mesh(\n        new THREE.SphereGeometry(6, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    jupiter.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/jupitermap.jpg');\n    // jupiter.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/marsbump1k.jpg');\n    // jupiter.material.bumpScale = 0.05;\n\n    var orbitRadius = 70;\n\n    jupiter.position.set(orbitRadius, 0, 0);\n    jupiter.rotation.x = Math.PI / 2;\n\n    var material = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometry = new THREE.CircleGeometry(orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0, 0, 0);\n    // console.log(jupiter);\n\n    scene.add(jupiter);\n    scene.add(line);\n\n    this.update = function (time) {\n        jupiter.position.x = Math.cos(time * 0.05) * orbitRadius;\n        jupiter.position.y = Math.sin(time * 0.05) * orbitRadius;\n        jupiter.rotation.y = time * 0.45;\n    }\n\n}\n\nexport default Jupiter;","function Saturn(scene) {\n\n    var saturn = new THREE.Mesh(\n        new THREE.SphereGeometry(5, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    saturn.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/saturnmap.jpg');\n    // saturn.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/marsbump1k.jpg');\n    // saturn.material.bumpScale = 0.05;\n\n    var orbitRadius = 85;\n\n    saturn.position.set(orbitRadius, 0, 0);\n    saturn.rotation.x = Math.PI / 2;\n\n    var material = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometry = new THREE.CircleGeometry(orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0, 0, 0);\n    // console.log(saturn);\n\n    // SATURN'S RINGS\n    var rings = new THREE.Mesh(\n        new THREE.RingGeometry(6.4, 8, 30),\n        new THREE.MeshPhongMaterial());\n    \n    rings.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/saturnringcolor.jpg');\n    rings.material.side = THREE.DoubleSide;\n\n    saturn.add(rings);\n    \n    scene.add(saturn);\n    scene.add(line);\n\n    saturn.children[0].rotation.x = Math.PI / 2;\n\n    this.update = function (time) {\n        saturn.position.x = Math.cos(time * 0.045) * orbitRadius;\n        saturn.position.y = Math.sin(time * 0.045) * orbitRadius;\n        saturn.rotation.y = time * 0.45;\n    };\n\n}\n\nexport default Saturn;","function Uranus(scene) {\n\n    var uranus = new THREE.Mesh(\n        new THREE.SphereGeometry(4, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    uranus.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/uranusmap.jpg');\n    // saturn.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/marsbump1k.jpg');\n    // saturn.material.bumpScale = 0.05;\n\n    var orbitRadius = 100;\n\n    uranus.position.set(orbitRadius, 0, 0);\n    uranus.rotation.x = Math.PI / 2;\n\n    var material = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometry = new THREE.CircleGeometry(orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0, 0, 0);\n    // console.log(uranus);\n\n    // SATURN'S RINGS\n    var rings = new THREE.Mesh(\n        new THREE.RingGeometry(4.8, 5.3, 30),\n        new THREE.MeshPhongMaterial());\n\n    rings.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/uranusringcolour.jpg');\n    rings.material.side = THREE.DoubleSide;\n\n    uranus.add(rings);\n\n    scene.add(uranus);\n    scene.add(line);\n\n    uranus.children[0].rotation.x = Math.PI / 2;\n\n    this.update = function (time) {\n        uranus.position.x = Math.cos(time * 0.038) * orbitRadius;\n        uranus.position.y = Math.sin(time * 0.038) * orbitRadius;\n        uranus.rotation.y = time * 0.45;\n    };\n\n}\n\nexport default Uranus;","function Neptune(scene) {\n\n    var neptune = new THREE.Mesh(\n        new THREE.SphereGeometry(4, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    neptune.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/neptunemap.jpg');\n    // neptune.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/marsbump1k.jpg');\n    // neptune.material.bumpScale = 0.05;\n\n    var orbitRadius = 117;\n\n    neptune.position.set(orbitRadius, 0, 0);\n    neptune.rotation.x = Math.PI / 2;\n\n    var material = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometry = new THREE.CircleGeometry(orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0, 0, 0);\n    // console.log(neptune);\n\n    scene.add(neptune);\n    scene.add(line);\n\n    this.update = function (time) {\n        neptune.position.x = Math.cos(time * 0.028) * orbitRadius;\n        neptune.position.y = Math.sin(time * 0.028) * orbitRadius;\n        neptune.rotation.y = time * 0.45;\n    }\n\n}\n\nexport default Neptune;","function Pluto(scene) {\n\n    var pluto = new THREE.Mesh(\n        new THREE.SphereGeometry(1.5, 30, 30),\n        new THREE.MeshPhongMaterial());\n\n    pluto.material.map = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/plutomap1k.jpg');\n    pluto.material.bumpMap = THREE.ImageUtils.loadTexture('js/libs/threex.planets-master/images/plutobump1k.jpg');\n    pluto.material.bumpScale = 0.05;\n\n    var orbitRadius = 135;\n\n    pluto.position.set(orbitRadius, 0, 0);\n    pluto.rotation.x = Math.PI / 2;\n\n    var material = new THREE.LineBasicMaterial({ color: 'aqua' });\n    var geometry = new THREE.CircleGeometry(orbitRadius, 1000);\n    geometry.vertices.shift();\n    var line = new THREE.Line(geometry, material);\n    line.position.set(0, 0, 0);\n    // console.log(pluto);\n\n    scene.add(pluto);\n    scene.add(line);\n\n    this.update = function (time) {\n        pluto.position.x = Math.cos(time * 0.02) * orbitRadius;\n        pluto.position.y = Math.sin(time * 0.02) * orbitRadius;\n        pluto.rotation.y = time * 0.45;\n    }\n\n}\n\nexport default Pluto;","// var THREE = require('three');\n// var OrbitControls = require('three-orbit-controls')(THREE);\n// OrbitControls === undefined;\n\n// import * as THREE from 'three';\n// import { OrbitControls } from 'three-orbitcontrols-ts';\nimport Earth from \"./sceneSubjects/Earth\";\nimport GeneralLights from \"./sceneSubjects/GeneralLights\";\nimport StarField from \"./sceneSubjects/StarField\";\nimport Sun from \"./sceneSubjects/Sun\";\nimport Moon from \"./sceneSubjects/Moon\";\nimport Mercury from \"./sceneSubjects/Mercury\";\nimport Venus from \"./sceneSubjects/Venus\";\nimport Mars from \"./sceneSubjects/Mars\";\nimport Jupiter from \"./sceneSubjects/Jupiter\";\nimport Saturn from \"./sceneSubjects/Saturn\";\nimport Uranus from \"./sceneSubjects/Uranus\";\nimport Neptune from \"./sceneSubjects/Neptune\";\nimport Pluto from \"./sceneSubjects/Pluto\";\n\nfunction SceneManager(canvas) {\n  const clock = new THREE.Clock();\n\n  const screenDimensions = {\n    width: canvas.width,\n    height: canvas.height\n  };\n\n  const scene = buildScene();\n  const renderer = buildRender(screenDimensions);\n  const camera = buildCamera(screenDimensions);\n  const sceneSubjects = createSceneSubjects(scene);\n  const controls = new THREE.OrbitControls(camera, renderer.domElement);\n  camera.position.z = 200;\n  controls.minDistance = 15;\n  controls.maxDistance = 1000;\n  //   camera.rotate.y = 90 * (Math.PI / 180);\n\n  function buildScene() {\n    const scene = new THREE.Scene();\n\n    // scene.background = new THREE.Color(0xffffff);\n\n    // var geometry = new THREE.SphereGeometry(1000,1000,1000);\n    // var material = new THREE.MeshBasicMaterial();\n    // material.map = THREE.TextureLoader('/js/libs/threex.planets-master/images/galaxy_starfield.png');\n    // material.side = THREE.BackSide;\n    // var mesh = new THREE.Mesh(geometry, material)\n\n    // scene.backgroud = mesh;\n\n    // scene.background = new THREE.CubeTextureLoader().setPath(\"js/libs/Skybox_Images/\")\n    //     .load([\"galaxy-X.jpg\", \"galaxy-Y.jpg\", \"galaxy-Z.jpg\", \"galaxy+X.jpg\", \"galaxy+Y.jpg\", \"galaxy+Z.jpg\"]);\n\n    return scene;\n  }\n\n  function buildRender({ width, height }) {\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true\n    });\n    const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    renderer.setPixelRatio(DPR);\n    // renderer.setClearColor(0xffffff);\n    renderer.setSize(width, height);\n\n    renderer.gammaInput = true;\n    renderer.gammaOutput = true;\n\n    return renderer;\n  }\n\n  function buildCamera({ width, height }) {\n    const aspectRatio = width / height;\n    const fieldOfView = 75;\n    const nearPlane = 0.1;\n    const farPlane = 30000;\n    const camera = new THREE.PerspectiveCamera(\n      fieldOfView,\n      aspectRatio,\n      nearPlane,\n      farPlane\n    );\n\n    return camera;\n  }\n\n  // function buildSkybox() {\n  //     let materialArray = [];\n  //     let texture_ft = new THREE.TextureLoader().load('galaxy-X.tga');\n  //     let texture_bk = new THREE.TextureLoader().load('galaxy-Y.tga');\n  //     let texture_up = new THREE.TextureLoader().load('galaxy-Z.tga');\n  //     let texture_dn = new THREE.TextureLoader().load('galaxy+X.tga');\n  //     let texture_rt = new THREE.TextureLoader().load('galaxy+Y.tga');\n  //     let texture_lf = new THREE.TextureLoader().load('galaxy+Z.tga');\n\n  //     materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }));\n  //     materialArray.push(new THREE.MeshBasicMaterial({ map: texture_bk }));\n  //     materialArray.push(new THREE.MeshBasicMaterial({ map: texture_up }));\n  //     materialArray.push(new THREE.MeshBasicMaterial({ map: texture_dn }));\n  //     materialArray.push(new THREE.MeshBasicMaterial({ map: texture_rt }));\n  //     materialArray.push(new THREE.MeshBasicMaterial({ map: texture_lf }));\n\n  //     for (let i = 0; i < 6; i++)\n  //         materialArray[i].side = THREE.BackSide;\n\n  //     let skyboxGeo = new THREE.BoxGeometry(1000, 1000, 1000);\n  //     let skybox = new THREE.Mesh(skyboxGeo, materialArray);\n  //     scene.add(skybox);\n  // }\n\n  function createSceneSubjects(scene) {\n    const sceneSubjects = [\n      new GeneralLights(scene),\n      new StarField(scene),\n      new Sun(scene),\n      new Earth(scene),\n      new Mercury(scene),\n      new Venus(scene),\n      new Mars(scene),\n      new Jupiter(scene),\n      new Saturn(scene),\n      new Uranus(scene),\n      new Neptune(scene),\n      new Pluto(scene)\n    ];\n\n    // THREE.sceneSubjects[3].add(sceneSubjects[4]);\n\n    return sceneSubjects;\n  }\n\n  this.update = function() {\n    const elapsedTime = clock.getElapsedTime();\n\n    for (let i = 0; i < sceneSubjects.length; i++)\n      sceneSubjects[i].update(elapsedTime);\n\n    renderer.render(scene, camera);\n  };\n\n  this.onWindowResize = function() {\n    const { width, height } = canvas;\n\n    screenDimensions.width = width;\n    screenDimensions.height = height;\n\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(width, height);\n  };\n}\n\nexport default SceneManager;\n","// import * as THREE from 'three';\nconst canvas = document.getElementById(\"canvas\");\nimport SceneManager from \"./js/SceneManager\";\nconst sceneManager = new SceneManager(canvas);\n\nbindEventListeners();\nrender();\n\nfunction bindEventListeners() {\n    window.onresize = resizeCanvas;\n    resizeCanvas();\n}\n\nfunction resizeCanvas() {\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n\n    sceneManager.onWindowResize();\n}\n\nfunction render() {\n    requestAnimationFrame(render);\n    sceneManager.update();\n}"],"sourceRoot":""}